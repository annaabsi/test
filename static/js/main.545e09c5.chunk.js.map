{"version":3,"sources":["api.ts","services/PeopleService.ts","components/PeopleList/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","headers","PeopleService","findPeopleApi","name","next","endpointUrl","api","post","term","PeopleList","props","useState","people","setPeople","searchName","setSearchName","nextPage","setNextPage","totalSize","setTotalSize","hasMore","setHasMore","className","type","placeholder","title","value","onChange","e","target","onKeyPress","event","key","PeopleDataService","then","response","data","results","total","pagination","length","dataLength","concat","loader","map","person","index","locationName","style","backgroundImage","picture","professionalHeadline","href","username","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8OAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACP,eAAgB,sBCcLC,EAJO,CACpBC,cAdoB,SAACC,GAAqC,IAAvBC,EAAsB,uDAAP,GAG9CC,EAAW,2BAOf,OAJID,IACFC,GAAW,gBAAaD,IAGnBE,EAAIC,KAAKF,EAAa,CAAEF,KAAM,CAAEK,KAAK,GAAD,OAAKL,Q,eCwGnCM,EA9Gc,SAACC,GAAW,IAAD,EACVC,mBAA4B,IADlB,mBAC/BC,EAD+B,KACvBC,EADuB,OAEFF,mBAAiB,IAFf,mBAE/BG,EAF+B,KAEnBC,EAFmB,OAGNJ,mBAAiB,IAHX,mBAG/BK,EAH+B,KAGrBC,EAHqB,OAIJN,mBAAiB,GAJb,mBAI/BO,EAJ+B,KAIpBC,EAJoB,OAKRR,oBAAS,GALD,mBAK/BS,EAL+B,KAKtBC,EALsB,KA0CtC,OACE,mCACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,wDACA,4IACA,mGAEF,sBAAKA,UAAU,MAAf,UACE,uBACEA,UAAU,YACVC,KAAK,OACLC,YAAY,wBACZC,MAAM,SACNC,MAAOZ,EACPa,SAlDmB,SAACC,GAC5B,IAAMd,EAAac,EAAEC,OAAOH,MAC5BX,EAAcD,IAiDNgB,WAAY,SAACC,GACO,UAAdA,EAAMC,KA9CpBC,EAAkB/B,cAAcY,EAAYE,GAAUkB,MAAK,SAACC,GAC1DtB,GAAU,WAER,OAAOsB,EAASC,KAAKC,WAEvBlB,GAAa,WAEX,OAAOgB,EAASC,KAAKE,SAEvBrB,GAAY,WAEV,OAAOkB,EAASC,KAAKG,WAAWnC,cAwC9B,mBAAGkB,UAAU,qBAEI,IAAlBV,EAAO4B,QACN,6CACY,iCAAStB,IADrB,wBAKF,cAAC,IAAD,CACEuB,WAAY7B,EAAO4B,OACnBpC,KA7Cc,WAChBQ,EAAO4B,QAAUtB,GACnBG,GAAW,WACT,OAAO,KAIXY,EAAkB/B,cAAcY,EAAYE,GAAUkB,MAAK,SAACC,GAC1DtB,EAAUD,EAAO8B,OAAOP,EAASC,KAAKC,UACtCpB,EAAYkB,EAASC,KAAKG,WAAWnC,UAqCjCgB,QAASA,EACTE,UAAU,YACVqB,OACoB,IAAlB/B,EAAO4B,OAAe,oBAAIlB,UAAU,SAAd,wBAAyC,GANnE,SASGV,GACCA,EAAOgC,KAAI,SAACC,EAAQC,GAAT,OACT,qBAAKxB,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,6BAAKuB,EAAO1C,OACZ,4BAAI0C,EAAOE,eACX,qBACEzB,UAAU,MACV0B,MAAO,CAAEC,gBAAiB,OAASJ,EAAOK,QAAU,OAEtD,qBAAK5B,UAAU,MAAf,SACE,+BAAOuB,EAAOM,yBAEhB,oBACEC,KAAI,2BAAsBP,EAAOQ,UACjCxB,OAAO,SAFT,UAIE,2BACA,mBAAGP,UAAU,4BAfUwB,gBC9E5BQ,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSiC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BX,M","file":"static/js/main.545e09c5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://search.torre.co/\",\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n","import api from \"../api\";\n\nconst findPeopleApi = (name: string, next: string = \"\") => {\n\n  // Parsing endpoint: Base\n  let endpointUrl = `people/_search/?size=20&`;\n\n  // Parsing endpoint: Pagination\n  if (next) {\n    endpointUrl += `after=${next}`;\n  }\n\n  return api.post(endpointUrl, { name: { term: `${name}` } });\n};\n\nconst PeopleService = {\n  findPeopleApi,\n};\n\nexport default PeopleService;\n","import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport PeopleDataService from \"../../services/PeopleService\";\nimport PeopleData from \"../../types/People\";\nimport \"./index.scss\";\n\nconst PeopleList: React.FC = (props) => {\n  const [people, setPeople] = useState<Array<PeopleData>>([]);\n  const [searchName, setSearchName] = useState<string>(\"\");\n  const [nextPage, setNextPage] = useState<string>(\"\");\n  const [totalSize, setTotalSize] = useState<number>(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const onChangeSearchPeople = (e: ChangeEvent<HTMLInputElement>) => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const findPeople = () => {\n    PeopleDataService.findPeopleApi(searchName, nextPage).then((response) => {\n      setPeople(() => {\n        // console.log(response.data.results);\n        return response.data.results;\n      });\n      setTotalSize(() => {\n        // console.log(response.data.total);\n        return response.data.total;\n      });\n      setNextPage(() => {\n        // console.log(response.data.pagination.next);\n        return response.data.pagination.next;\n      });\n    });\n  };\n\n  const fetchMoreData = () => {\n    if (people.length >= totalSize) {\n      setHasMore(() => {\n        return false;\n      });\n    }\n\n    PeopleDataService.findPeopleApi(searchName, nextPage).then((response) => {\n      setPeople(people.concat(response.data.results));\n      setNextPage(response.data.pagination.next);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"headline\">\n          <h1>Discover Torre Genomes</h1>\n          <p>To build the worldâ€™s network that automates recruiting we have to provide massive value to candidates.</p>\n          <p>This is, and will always be, our focus, our drive, our passion.</p>\n        </div>\n        <div className=\"bar\">\n          <input\n            className=\"searchbar\"\n            type=\"text\"\n            placeholder=\"Search people by name\"\n            title=\"Search\"\n            value={searchName}\n            onChange={onChangeSearchPeople}\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\") {\n                findPeople();\n              }\n            }}\n          />\n          <i className=\"fas fa-search\"></i>\n        </div>\n        {people.length !== 0 &&\n          <div>\n            There are <strong>{totalSize}</strong> profiles matching\n          </div>\n        }\n\n        <InfiniteScroll\n          dataLength={people.length}\n          next={fetchMoreData}\n          hasMore={hasMore}\n          className=\"flex-grid\"\n          loader={\n            people.length !== 0 ? <h4 className=\"search\">Loading...</h4> : \"\"\n          }\n        >\n          {people &&\n            people.map((person, index) => (\n              <div className=\"flex-grid-item\">\n                <div className=\"card\" key={index}>\n                  <h2>{person.name}</h2>\n                  <p>{person.locationName}</p>\n                  <div\n                    className=\"pic\"\n                    style={{ backgroundImage: \"url(\" + person.picture + \")\" }}\n                  ></div>\n                  <div className=\"bio\">\n                    <span>{person.professionalHeadline}</span>\n                  </div>\n                  <a\n                    href={`https://torre.co/${person.username}`}\n                    target=\"_blank\"\n                  >\n                    <button></button>\n                    <i className=\"fas fa-arrow-right\"></i>\n                  </a>\n                </div>\n              </div>\n            ))}\n        </InfiniteScroll>\n      </div>\n    </>\n  );\n};\n\nexport default PeopleList;\n","import React from 'react';\nimport './App.css';\nimport PeopleList from \"./components/PeopleList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PeopleList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}